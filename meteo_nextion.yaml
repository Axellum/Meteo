# This is ESPHome configuration file. This goes to the esphome folder
# You need to provide your WiFi ssis/password and passwords for API and OTA (or put them in your esphome/secrets.yaml)
esphome:
  name: ha_dash
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: ****
  password: !secret wifi_password
  fast_connect: true

api:

ota:

uart:
  rx_pin: D9
  tx_pin: D10
  baud_rate: 9600

i2c:
  sda: D2
  scl: D1

logger:
  baud_rate: 0     # Disable UART logging (pins GPIO1/3 are used for Nextion communication)
  level: VERBOSE

time:
  - platform: sntp
    id: sntp_time

status_led:
  pin:
    number: D3
    inverted: True



sensor:
  - platform: bmp280
    temperature:
      name: "Outside Temperature"
      oversampling: 16x
    pressure:
      name: "Outside Pressure"
    address: 0x77
    update_interval: 60s

  - platform: homeassistant   # Outside temperature
    id: temp_outside    
    entity_id: sensor.dark_sky_temperature
    
  - platform: homeassistant   # Forecast icon
    id: today_icon
    entity_id: sensor.today_icon
    
  - platform: homeassistant   # Forecast icon
    id: today_icon1
    entity_id: sensor.today_icon1
    
  - platform: homeassistant   # Forecast icon
    id: today_icon2
    entity_id: sensor.today_icon2
    
  - platform: homeassistant   # Forecast icon
    id: today_icon3
    entity_id: sensor.today_icon3

  - platform: homeassistant
    id: pluis_0mn 
    entity_id: sensor.pluis_0mn 
    
  - platform: homeassistant
    id: pluis_5mn
    entity_id: sensor.pluis_5mn
    
  - platform: homeassistant
    id: pluis_10mn 
    entity_id: sensor.pluis_10mn 
    
  - platform: homeassistant
    id: pluis_15mn
    entity_id: sensor.pluis_15mn

  - platform: homeassistant
    id: pluis_30mn 
    entity_id: sensor.pluis_30mn 

  - platform: homeassistant
    id: pluis_35mn
    entity_id: sensor.pluis_35mn

  - platform: homeassistant
    id: pluis_40mn 
    entity_id: sensor.pluis_40mn 

  - platform: homeassistant
    id: pluis_45mn
    entity_id: sensor.pluis_45mn

  - platform: homeassistant
    id: pluis_50mn 
    entity_id: sensor.pluis_50mn 

  - platform: homeassistant
    id: pluis_55mn
    entity_id: sensor.pluis_55mn

  - platform: homeassistant   # Outside temperature
    id: disk_use_percent    
    entity_id: sensor.gauge_disque 

  - platform: homeassistant   # Outside temperature
    id: processor_use
    entity_id: sensor.gauge_uc
    
  - platform: homeassistant   # Outside temperature
    id: memory_use_percent
    entity_id: sensor.gauge_ram

text_sensor:

  - platform: homeassistant
    id: uptime_ha
    entity_id: sensor.uptime_ha
    internal: true

  - platform: homeassistant
    id: capbreton_weather
    entity_id: sensor.capbreton_weather
    internal: true
  - platform: homeassistant
    id: capbreton_next_rain
    entity_id: sensor.capbreton_next_rain
    internal: true
  - platform: homeassistant
    id: capbreton_rain_chance
    entity_id: sensor.capbreton_rain_chance
    internal: true
  - platform: homeassistant
    id: capbreton_weather_alert
    entity_id: sensor.capbreton_weather_alert
    internal: true

  - platform: homeassistant
    id: date_simple
    entity_id: sensor.date_simple
    internal: true
    
  - platform: homeassistant
    id: pi_hole_dns_unique_clients
    entity_id: sensor.pi_hole_dns_unique_clients
    internal: true
    
  - platform: homeassistant
    id: freebox_download_speed
    entity_id: sensor.freebox_download_speed
    internal: true
  - platform: homeassistant
    id: freebox_upload_speed
    entity_id: sensor.freebox_upload_speed
    internal: true
    
  - platform: homeassistant   # Outside temperature
    id: temperature    
    entity_id: sensor.temperature
  - platform: homeassistant   # Outside temperature
    id: humi    
    entity_id: sensor.humidite  
  - platform: homeassistant   # Outside temperature
    id: gas    
    entity_id: sensor.gas  
  - platform: homeassistant   # Outside temperature
    id: pression    
    entity_id: sensor.pression  

  - platform: homeassistant
    id: dark_sky_daytime_high_temperature_1d
    entity_id: sensor.dark_sky_daytime_high_temperature_1d
    internal: true
  - platform: homeassistant
    id: dark_sky_daytime_high_temperature_2d
    entity_id: sensor.dark_sky_daytime_high_temperature_2d
    internal: true
  - platform: homeassistant 
    id: dark_sky_daytime_high_temperature_3d 
    entity_id: sensor.dark_sky_daytime_high_temperature_3d
  - platform: homeassistant
    id: dark_sky_overnight_low_temperature_1d    
    entity_id: sensor.dark_sky_overnight_low_temperature_1d
  - platform: homeassistant
    id: dark_sky_overnight_low_temperature_2d    
    entity_id: sensor.dark_sky_overnight_low_temperature_2d  
  - platform: homeassistant
    id: dark_sky_overnight_low_temperature_3d    
    entity_id: sensor.dark_sky_overnight_low_temperature_3d 
  - platform: homeassistant
    id: dark_sky_wind_speed    
    entity_id: sensor.dark_sky_wind_speed
  - platform: homeassistant
    id: dark_sky_wind_bearing    
    entity_id: sensor.dark_sky_wind_bearing  

binary_sensor:
  - platform: homeassistant
    id: somebody_home
    entity_id: binary_sensor.somebody_home
  - platform: nextion
    page_id: 0
    component_id: 15
    id: reboot
    on_press:
      then:
        - homeassistant.service:
            service: script.reboot_ha
            
globals:
 - id: first_page             # First page of the display?
   type: bool
   restore_value: no
 - id: display_on             # Is display on?
   type: bool
   restore_value: no

display:
  - platform: nextion
    id: teplomer
    update_interval: 5s
    lambda: |-

      if (id(somebody_home).state) {
        if (!id(display_on)) {
          it.set_backlight_brightness(50);
          id(display_on)=true;
        }

          it.send_command_printf("%s.pic=%.0f", "icon",id(today_icon).state);
          it.send_command_printf("%s.pic=%.0f", "icon_dem",id(today_icon1).state);
          it.send_command_printf("%s.pic=%.0f", "icon_2j",id(today_icon2).state);
          it.send_command_printf("%s.pic=%.0f", "Icon_3j",id(today_icon3).state);
          it.send_command_printf("%s.pic=%.0f", "pluis_0mn",id(pluis_0mn).state);
          it.send_command_printf("%s.pic=%.0f", "pluis_5mn",id(pluis_5mn).state);
          it.send_command_printf("%s.pic=%.0f", "pluis_10mn",id(pluis_10mn).state);
          it.send_command_printf("%s.pic=%.0f", "pluis_15mn",id(pluis_15mn).state);


          auto time = id(sntp_time).now();
          it.set_component_text_printf("date",id(date_simple).state.c_str());
          it.set_component_text_printf("temp_ext","%2.1f",id(temp_outside).state);

          it.set_component_value("disque", id(disk_use_percent).state);
          it.set_component_value("ram", id(memory_use_percent).state);
          it.set_component_value("uc", id(processor_use).state);

          it.set_component_text_printf("humi",id(humi).state.c_str());
          it.set_component_text_printf("gas",id(gas).state.c_str());
          it.set_component_text_printf("pression",id(pression).state.c_str());
          it.set_component_text_printf("temp_int",id(temperature).state.c_str());
          
          it.set_component_text_printf("heure","%02d",time.hour);
          it.set_component_text_printf("minute","%02d",time.minute);

          it.set_component_text_printf("client",id(pi_hole_dns_unique_clients).state.c_str());
          it.set_component_text_printf("hlever",id(freebox_download_speed).state.c_str());
          it.set_component_text_printf("hcoucher",id(freebox_upload_speed).state.c_str());



          it.set_component_text_printf("t9",id(dark_sky_overnight_low_temperature_1d).state.c_str());
          it.set_component_text_printf("t10",id(dark_sky_overnight_low_temperature_2d).state.c_str());
          it.set_component_text_printf("t11",id(dark_sky_overnight_low_temperature_3d).state.c_str());
          
          it.set_component_text_printf("t12",id(dark_sky_daytime_high_temperature_1d).state.c_str());
          it.set_component_text_printf("t13",id(dark_sky_daytime_high_temperature_2d).state.c_str());
          it.set_component_text_printf("t14",id(dark_sky_daytime_high_temperature_3d).state.c_str());

          it.set_component_text_printf("t15",id(dark_sky_wind_speed).state.c_str());
      } else {

        if (id(display_on)) {
          it.set_backlight_brightness(0);
          id(display_on)=false;
        }
      }
